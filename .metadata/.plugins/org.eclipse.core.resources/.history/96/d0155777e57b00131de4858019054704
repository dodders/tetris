package com.gd.tetris;

import com.gd.tetris.model.Model;

import javafx.application.Platform;
import javafx.scene.Node;
import javafx.scene.layout.GridPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;

public class Controller implements Runnable {

	//TilePane view;
	GridPane view;
	Model model;
	Rectangle r;
	Rectangle prev;
	int rows;
	int cols;
	int currRow = 0, prevRow = 0;
	int currCol = 0, prevCol = 0;	
	
	public Controller(GridPane tp, Model model) {
		this.view = tp;
		this.model = model;
		this.rows = model.rows;
		this.cols = model.cols;
	}
	
	private void updateView() {
		for (int r = 0; r < rows; r++) {
			for (int c = 0; c < cols; c++) {
				Rectangle rect = new Rectangle(20,20,20,20);
				rect.setFill(model.tiles[r][c]);
				view.add(rect, c, r);
			}
		}
	}

	@Override
	public void run() {
		updateModel();
		updateView();
/*		Platform.runLater(new Runnable() {
			@Override
			public void run() {
				updateView();				
			}
		});*/
		try {
			Thread.sleep(1000);
		} catch (InterruptedException e) {
			System.exit(1);
		}
	}

	private void updateModel() {
		//switch currRow to aqua
		model.tiles[currRow][currCol] = Color.AQUA;
		//next row
		currCol++;
		if (currCol == cols) {
			currCol = 0;
			currRow++;
			if (currRow == rows) {
				currRow = 0;
			}
		}
		model.tiles[currRow][currCol] = Color.GREEN;
	}
}
